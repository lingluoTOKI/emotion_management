version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: emotion_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: emotion_management
      MYSQL_USER: emotion_user
      MYSQL_PASSWORD: emotion_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - emotion_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: emotion_backend
    environment:
      DATABASE_URL: mysql://emotion_user:emotion_password@mysql:3306/emotion_management
      SECRET_KEY: your-super-secret-key-for-production-change-this
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 1440
      ALLOWED_ORIGINS: "http://localhost:3000,http://localhost:3001,http://127.0.0.1:3000,http://frontend:3000"
      UPLOAD_DIR: uploads
      MAX_FILE_SIZE: 10485760
      LOG_LEVEL: INFO
      LOG_FILE: logs/app.log
      DEBUG: "True"
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - emotion_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 前端Web服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: emotion_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - emotion_network
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local

networks:
  emotion_network:
    driver: bridge
